@using AStar.Dev.Testing.Dashboard.Services
@namespace AStar.Dev.Testing.Dashboard.Components
@inject ThemeService ThemeService
@inject IJSRuntime            JsRuntime

<div class="theme-toggle">
    <button class="btn btn-link" @onclick="ToggleTheme">
        @if (ThemeService.CurrentTheme == "light")
        {
            <i class="bi bi-sun-fill" aria-label="Light theme"></i>
        }
        else
        {
            <i class="bi bi-moon-fill" aria-label="Dark theme"></i>
        }
    </button>
</div>

@code {
    private bool isFirstRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (isFirstRender)
        {
            isFirstRender = false;
            var theme = await JsRuntime.InvokeAsync<string>("localStorage.getItem", "theme");

            if (!string.IsNullOrEmpty(theme))
            {
                ThemeService.CurrentTheme = theme;
                await UpdateTheme();
                StateHasChanged();
            }
        }
    }

    private async Task ToggleTheme()
    {
        ThemeService.CurrentTheme = ThemeService.CurrentTheme == "light" ? "dark" : "light";
        await UpdateTheme();
    }

    private async Task UpdateTheme()
    {
        await JsRuntime.InvokeVoidAsync("localStorage.setItem", "theme", ThemeService.CurrentTheme);
        await JsRuntime.InvokeVoidAsync("setTheme",             ThemeService.CurrentTheme);
    }

}
